openapi: 3.0.1
info:
  title: Guardia API Components
  description: Componentes reutilizáveis para as APIs da Guardia.
  version: 1.0.0
paths: {}
components:
  parameters:
    IdempotencyKey:
      name: Idempotency-Key
      in: header
      description: Chave para garantir idempotência da requisição.
      required: true
      schema:
        type: string
        format: uuid

    Accept:
      name: Accept
      in: header
      description: |
        Tipo de contrato esperado na resposta da API. O valor padrão é
        `application/vnd.guardia.v1+json` ou a versao mais recente.
      required: false
      example: application/vnd.guardia.v1+json
      schema:
        type: string

    AcceptLanguage:
      name: Accept-Language
      in: header
      description: |
        O idioma em que a API deve retornar as mensagens de erro. Use `en`
        para inglês americano, `es` para espanhol ou `pt-BR` para português brasileiro. O valor
        padrão é `en`.
      required: false
      example: en
      schema:
        type: string

    ContentType:
      name: Content-Type
      in: header
      description: |
        Tipo de contrato enviado na requisição para a API. O valor padrão é
        `application/vnd.guardia.v1+json` ou a versao mais recente.
      required: false
      example: application/vnd.guardia.v1+json
      schema:
        type: string

    CorrelationId:
      name: X-Grd-Correlation-Id
      in: header
      description: Identificador de correlação para rastreamento distribuído.
      required: false
      schema:
        type: string
        format: uuid

    EntityIdParam:
      name: entity_id
      in: path
      description: |
        Identificador único da entidade no formato UUIDv7. Alternativamente pode ser utilizado o
        `external_entity_id`.
      required: true
      schema:
        $ref: '#/components/schemas/EntityID'

    PageSize:
      name: page_size
      in: query
      description: Número de itens por página. Máximo de 100 itens.
      required: false
      example: 20
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20

    PageToken:
      name: page_token
      in: query
      description: Token opaco que identifica a página atual.
      required: false
      schema:
        type: string

    OrderBy:
      name: order_by
      in: query
      description: Campo usado para ordenação dos resultados. Apenas campos temporais são permitidos.
      required: false
      schema:
        type: string
        enum: [created_at, updated_at, reference_date]
        default: created_at

    Sort:
      name: sort
      in: query
      description: Direção da ordenação. Aceita 'asc' ou 'desc' (case insensitive).
      required: false
      schema:
        type: string
        enum: [asc, desc]
        default: asc

    IncludeDiscarded:
      name: include_discarded
      in: query
      description: |
        Incluir os itens descartados no resultado da busca. O valor padrão é
        `false`.
      required: false
      example: 'false'
      schema:
        type: string

    MetadataFilter:
      name: $metadata.key
      in: query
      description: |
        Se você deseja listar os itens com uma metadata cuja chave seja
        `foo` e o valor seja `bar`, a consulta seria `$metadata.foo=bar`.
      required: false
      example: value
      schema:
        type: string

    ListOfEntityIds:
      name: entity_ids
      in: query
      description: |
        Uma lista de IDs de entidades no formato UUIDv7 separados por vírgulas. Ex.:
        `entity_ids={entity_id},{entity_id},{entity_id}`. Espaços em branco
        entre as vírgulas serão ignorados.
      required: false
      example: 018f74a6e3b270ccbf248a4b012f5f3e,018f74a6e3b270ccbf248a4b012f5f3f,018f74a6e3b270ccbf248a4b012f5f40
      schema:
        type: string
        pattern: ^([0-9a-f]{8}-[0-9a-f]{4}-7[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12},)*[0-9a-f]{8}-[0-9a-f]{4}-7[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$

    ListOfExternalEntityIds:
      name: external_entity_ids
      in: query
      description: |
        Uma lista de IDs externos de entidades separados por vírgulas. Ex.:
        `external_entity_ids={external_id},{external_id},{external_id}`. Espaços em branco
        entre as vírgulas serão ignorados.
      required: false
      example: ext-123,ext-456,ext-789
      schema:
        type: string

    AssetCodes:
      name: asset_codes
      in: query
      description: |
        Uma lista de códigos de assets separados por vírgulas. Para ativos fiduciários, use códigos ISO 4217
        (ex: BRL, USD, EUR). Para outros tipos de ativos, use o código definido
        na criação do asset.
      required: false
      example: 'BRL,USD,EUR'
      schema:
        type: string

    AssetNumbers:
      name: asset_numbers
      in: query
      description: |
        Uma lista de números de identificação de assets separados por vírgulas. Este número pode ser baseado
        em especificações como ISO 10962, MIC, ISIN ou um padrão interno da
        instituição.
      required: false
      example: '986,840,978'
      schema:
        type: string

    ListOfAssetCodes:
      name: asset_codes
      in: query
      description: |
        Uma lista de códigos de ativos (moedas) separados por vírgulas. Exemplo: 'USD,BRL,EUR'.
      required: false
      example: 'USD,BRL,EUR'
      schema:
        type: string

    ListOfChapterIds:
      name: chapter_ids
      in: query
      description: |
        Uma lista de IDs de chapters no formato UUIDv7 separados por vírgulas. Exemplo: 'id1,id2,id3'.
      required: false
      example: '018f74a6e3b270ccbf248a4b012f5f3e,018f74a6e3b270ccbf248a4b012f5f3f'
      schema:
        type: string

  headers:
    X-Grd-Trace-Id:
      description: Identificador único da requisição gerado pela infraestrutura Guardia.
      schema:
        type: string
        format: uuid
      example: 018f74a6e3b270ccbf248a4b012f5f3e
      required: true

    X-Grd-Correlation-Id:
      description: Identificador de correlação para rastreamento distribuído.
      schema:
        type: string
        format: uuid
      example: 018f74a6e3b270ccbf248a4b012f5f3e
      required: true

    X-Grd-Debug:
      description: Habilita informações estendidas de debug no payload da resposta.
      schema:
        type: boolean
      example: true
      required: false

    Content-Type:
      description: Tipo de contrato retornado.
      schema:
        type: string
      example: application/vnd.guardia.v1+json
      required: true

    Content-Length:
      description: Indica o tamanho, em bytes, do corpo da resposta retornado pela API.
      schema:
        type: string
      example: <length>
      required: true

    Content-Language:
      description: O idioma em que a API retorna as mensagens de erro. Use en para inglês americano, es para espanhol ou pt-BR para português brasileiro.
      schema:
        type: string
      example: en
      required: true

    Cache-Control:
      description: "Controla o comportamento de cache para respostas HTTP. Deve ser 'no-store' para dados sensíveis. Deve ser 'public' para respostas de sucesso sem dados sensíveis que podem ser compartilhadas, ou 'private' para respostas de sucesso sem dados sensíveis que não podem ser compartilhadas, seguido da diretiva 'max-age' determinando o tempo máximo de cache em segundos."
      schema:
        type: string
      example: public, max-age=900
      required: true

    Link:
      description: Fornece links de navegação HATEOAS para paginação.
      schema:
        type: string
      example: |
        <https://{tenant_id}.guardia.finance/api/v1/ledgers?page_token={first_page_token}>; rel="first",
        <https://{tenant_id}.guardia.finance/api/v1/ledgers?page_token={previous_page_token}>; rel="previous",
        <https://{tenant_id}.guardia.finance/api/v1/ledgers?page_token={next_page_token}>; rel="next",
        <https://{tenant_id}.guardia.finance/api/v1/ledgers?page_token={last_page_token}>; rel="last"
      required: false

    Content-Digest:
      description: Hash do payload usado para garantir integridade em requisições idempotentes.
      schema:
        type: string
      example: sha-256=<hash>
      required: true

    Idempotency-Key:
      description: Chave para garantir idempotência da requisição.
      schema:
        type: string
      example: 018f74a6e3b270ccbf248a4b012f5f3e
      required: true

    Last-Modified:
      description: Indica a última data de modificação de uma entidade.
      schema:
        type: string
        format: date-time
      example: Wed, 21 Oct 2015 07:28:00 GMT
      required: true

    Retry-After:
      description: Informa quanto tempo (em segundos) o cliente deve esperar antes de tentar novamente após um erro 429.
      schema:
        type: integer
        minimum: 1
      example: 60
      required: true

    X-RateLimit-Limit:
      description: Cota de requisições por segundos por cliente (org id + tenant id).
      schema:
        type: integer
      example: 30
      required: true

    X-RateLimit-Remaining:
      description: Cota de requisições restantes no mesmo segundo.
      schema:
        type: integer
      example: 10
      required: true

    X-RateLimit-Reset:
      description: Tempo restante em segundos para a próxima requisição.
      schema:
        type: integer
      example: 60
      required: true

    Strict-Transport-Security:
      description: Indica que o navegador deve acessar o site apenas por HTTPS.
      schema:
        type: string
      example: max-age=31536000; includeSubDomains
      required: true

  schemas:
    UUID:
      type: string
      format: uuid
      description: Identificador único universal no formato UUID.
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$

    UUIDv7:
      type: string
      format: uuid
      description: Identificador único universal no formato UUIDv7 (RFC 9562).
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-7[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$

    Ledger:
      type: object
      properties:
        entity_id:
          $ref: '#/components/schemas/EntityID'
        entity_type:
          type: string
          enum: [LEDGER]
        external_entity_id:
          $ref: '#/components/schemas/ExternalEntityID'
        version:
          $ref: '#/components/schemas/Version'
        name:
          type: string
          description: O nome único e personalizado da ledger. Mínimo de 3 caractere e Máximo de 256 caracteres.
          minLength: 3
          maxLength: 128
        description:
          type: string
          description: Uma descrição personalizada da ledger. Mínimo de 3 caracteres e Máximo de 256 caracteres.
          minLength: 3
          maxLength: 256
        created_at:
          $ref: '#/components/schemas/DateTime'
          nullable: false
        updated_at:
          $ref: '#/components/schemas/DateTime'
          nullable: false
        discarded_at:
          $ref: '#/components/schemas/DateTime'
          nullable: true
        metadata:
          $ref: '#/components/schemas/Metadata'

    Chapter:
      type: object
      properties:
        entity_id:
          $ref: '#/components/schemas/EntityID'
        entity_type:
          type: string
          enum: [CHAPTER]
        external_entity_id:
          $ref: '#/components/schemas/ExternalEntityID'
        version:
          $ref: '#/components/schemas/Version'
        name:
          type: string
        description:
          type: string
          nullable: true
        ledger_entity_id:
          $ref: '#/components/schemas/EntityID'
          description: |
            Identificador único da ledger associada ao chapter.
        created_at:
          $ref: '#/components/schemas/DateTime'
          nullable: false
        updated_at:
          $ref: '#/components/schemas/DateTime'
          nullable: false
        discarded_at:
          $ref: '#/components/schemas/DateTime'
          nullable: true
        metadata:
          $ref: '#/components/schemas/Metadata'

    Asset:
      type: object
      properties:
        entity_id:
          $ref: '#/components/schemas/EntityID'
        entity_type:
          type: string
          enum: [ASSET]
        external_entity_id:
          $ref: '#/components/schemas/ExternalEntityID'
        version:
          $ref: '#/components/schemas/Version'
        code:
          type: string
          minLength: 3
          maxLength: 10
        number:
          type: string
          minLength: 3
          maxLength: 10
        exponent:
          type: number
          minimum: 0
          maximum: 10
        is_fiat:
          type: boolean
        locations:
          type: array
          items:
            type: string
        ledgers:
          type: array
          description: |
            Lista de identificadores únicos das ledgers associadas ao asset.
          items:
            $ref: '#/components/schemas/EntityID'
        created_at:
          $ref: '#/components/schemas/DateTime'
          nullable: false
        updated_at:
          $ref: '#/components/schemas/DateTime'
          nullable: false
        discarded_at:
          $ref: '#/components/schemas/DateTime'
          nullable: true
        metadata:
          $ref: '#/components/schemas/Metadata'

    LedgerAssetBinding:
      type: object
      description: Representa a associação entre um ledger e um asset, incluindo informações específicas do vínculo.
      properties:
        ledger_entity_id:
          $ref: '#/components/schemas/EntityID'
          description: Identificador único do ledger.
        asset_entity_id:
          $ref: '#/components/schemas/EntityID'
          description: Identificador único do asset.
        code:
          type: string
          description: Código do asset vinculado.
          minLength: 3
          maxLength: 10
        number:
          type: string
          description: Número de identificação do asset vinculado.
          minLength: 3
          maxLength: 10
        exponent:
          type: number
          description: Expoente do asset vinculado.
          minimum: 0
          maximum: 10
        binded_at:
          $ref: '#/components/schemas/DateTime'
          description: Data e hora em que o asset foi vinculado ao ledger.

    Metadata:
      type: object
      description: Os metadados a serem adicionados à entidade devem ser fornecidos como pares de chave-valor em um formato de objeto JSON, com chave e valor como strings. O tamanho maximo do objeto deve ser 1MB.
      additionalProperties:
        type: string
      maxProperties: 10
      example:
        foo: bar

    DateTime:
      type: string
      description: Data e hora no formato no formato ISO 8601 / RFC 3339 (UTC).
      format: date-time
      pattern: ^(?<year>[0-9]{4})-?(?<month>1[0-2]|0[1-9])-?(?<day>3[01]|0[1-9]|[12][0-9])T(?<hour>2[0-3]|[01][0-9]):?(?<minute>[0-5][0-9]):?(?<second>[0-5][0-9])(?:\.(?<fraction>[0-9]{1,9}))?Z$

    Error:
      type: object
      properties:
        code:
          type: string
          description: "O codigo do erro. Ex.: ERR400_INVALID_PARAMETER."
        reason:
          type: string
          description: "O movito do erro, quando conhecido. Ex.: INVALID_ENTITY_ID_FORMAT."
        message:
          type: string
          description: "A mensagem que descreve o erro."
      required:
        - code
        - reason
        - message

    Errors:
      type: array
      description: Lista de erros retornados pela API. Cada erro contém um código, motivo e mensagem descritiva.
      items:
        $ref: '#/components/schemas/Error'
      example:
        - code: ERR400_INVALID_PARAMETER
          reason: INVALID_ENTITY_ID_FORMAT
          message: O parâmetro 'entity_id' é inválido. Deve ser um UUIDv7 válido.
        - code: ERR400_INVALID_PARAMETER
          reason: INVALID_EXTERNAL_ENTITY_ID_LENGTH
          message: O campo 'external_entity_id' deve ter até 36 caracteres.

    Version:
      type: integer
      minimum: 0
      maximum: 128

    EntityID:
      $ref: '#/components/schemas/UUIDv7'

    ExternalEntityID:
      type: string
      description: Identificador externo da entidade para interoperabilidade com outros sistemas.
      minLength: 1
      maxLength: 36
      example: 'ext-123'
      nullable: true

    ErrorsResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/Errors'
          description: Lista de erros.
        reference:
          type: string
          description: Link para a documentação.
          format: uri
      required:
        - errors
        - reference

    Debug:
      type: object
      properties:
        trace_id:
          type: string
          description: Identificador único da requisição.
        correlation_id:
          type: string
          description: Identificador de correlação para rastreamento distribuído.
        instance:
          type: string
          description: Identificador da instância que processou a requisição.
        timestamp:
          type: string
          description: Timestamp UNIX de quando a requisição foi recebida.
        duration:
          type: string
          description: Tempo total de processamento da requisição em milissegundos.
        memory:
          type: string
          description: Memória utilizada para processar a requisição em bytes.
        query:
          type: string
          description: Query string da requisição, se disponível.
        params:
          type: string
          description: Parâmetros de rota utilizados, se houver.
        external_ip:
          type: string
          description: IP externo da requisição do cliente.

    Pagination:
      type: object
      properties:
        page_size:
          type: integer
          description: Número de itens retornados na página atual.
        total_count:
          type: integer
          description: Número total de registros para a consulta original.
        next_page_token:
          type: string
          description: Token para recuperar a próxima página.
        previous_page_token:
          type: string
          description: Token para recuperar a página anterior.
        first_page_token:
          type: string
          description: Token representando a primeira página do conjunto de dados.
        last_page_token:
          type: string
          description: Token para ir para a última página.

    ListOfLedgers:
      type: array
      items:
        $ref: '#/components/schemas/Ledger'

    ListOfChapters:
      type: array
      items:
        $ref: '#/components/schemas/Chapter'

    ListOfAssets:
      type: array
      items:
        $ref: '#/components/schemas/Asset'

    ListOfBooks:
      type: array
      items:
        $ref: '#/components/schemas/Book'

    ListOfEntityIDs:
      type: array
      items:
        $ref: '#/components/schemas/EntityID'

    LedgerCreateRequest:
      type: object
      properties:
        external_entity_id:
          $ref: '#/components/schemas/ExternalEntityID'
        name:
          type: string
          minLength: 3
          maxLength: 128
        description:
          type: string
          minLength: 3
          maxLength: 256
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
        - external_entity_id
        - name

    LedgerUpdateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 3
          maxLength: 128
        description:
          type: string
          minLength: 3
          maxLength: 256
        metadata:
          $ref: '#/components/schemas/Metadata'

    ChapterCreateRequest:
      type: object
      properties:
        external_entity_id:
          $ref: '#/components/schemas/ExternalEntityID'
        name:
          type: string
        description:
          type: string
        ledger_entity_id:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
        - external_entity_id
        - name
        - ledger_entity_id

    ChapterUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'

    AssetCreateRequest:
      type: object
      properties:
        external_entity_id:
          $ref: '#/components/schemas/ExternalEntityID'
        code:
          type: string
        number:
          type: string
        exponent:
          type: string
        is_fiat:
          type: boolean
        locations:
          type: array
          items:
            type: string
        ledgers:
          $ref: '#/components/schemas/ListOfEntityIDs'
      required:
        - external_entity_id
        - code
        - number
        - exponent
        - is_fiat
        - locations
        - ledgers

    AssetUpdateRequest:
      type: object
      properties:
        code:
          type: string
        number:
          type: string
        exponent:
          type: string
        is_fiat:
          type: boolean
        locations:
          type: array
          items:
            type: string
        metadata:
          $ref: '#/components/schemas/Metadata'

    Book:
      type: object
      properties:
        entity_id:
          $ref: '#/components/schemas/EntityID'
        entity_type:
          type: string
          enum: [BOOK]
        external_entity_id:
          $ref: '#/components/schemas/ExternalEntityID'
        version:
          $ref: '#/components/schemas/Version'
        name:
          type: string
          minLength: 3
          maxLength: 128
          description: Nome único do book dentro do ledger.
        ledger:
          $ref: '#/components/schemas/EntityID'
          description: UUIDv7 do ledger ao qual o book pertence.
        nature:
          type: string
          enum: [CREDITOR, DEBITOR]
          description: Natureza do book.
        created_at:
          $ref: '#/components/schemas/DateTime'
          nullable: false
        updated_at:
          $ref: '#/components/schemas/DateTime'
          nullable: false
        discarded_at:
          $ref: '#/components/schemas/DateTime'
          nullable: true
        metadata:
          $ref: '#/components/schemas/Metadata'

    BookCreateRequest:
      type: object
      properties:
        external_entity_id:
          $ref: '#/components/schemas/ExternalEntityID'
        name:
          type: string
          minLength: 3
          maxLength: 128
        ledger_entity_id:
          $ref: '#/components/schemas/EntityID'
        nature:
          type: string
          enum: [CREDITOR, DEBITOR]
        asset:
          type: string
          description: Código do ativo (aka. moeda) ao qual o book esta associado.
          minLength: 3
          maxLength: 3
          example: 'USD'
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
        - external_entity_id
        - name
        - ledger_entity_id
        - nature
        - asset

  responses:
    Error400:
      description: Requisição inválida.
      headers:
        X-Grd-Trace-Id:
          $ref: '#/components/headers/X-Grd-Trace-Id'
        X-Grd-Correlation-Id:
          $ref: '#/components/headers/X-Grd-Correlation-Id'
      content:
        application/vnd.guardia.v1+json:
          schema:
            $ref: '#/components/schemas/ErrorsResponse'

    Error401:
      description: Não autorizado.
      headers:
        X-Grd-Trace-Id:
          $ref: '#/components/headers/X-Grd-Trace-Id'
        X-Grd-Correlation-Id:
          $ref: '#/components/headers/X-Grd-Correlation-Id'
      content:
        application/vnd.guardia.v1+json:
          schema:
            $ref: '#/components/schemas/ErrorsResponse'

    Error403:
      description: Acesso proibido.
      headers:
        X-Grd-Trace-Id:
          $ref: '#/components/headers/X-Grd-Trace-Id'
        X-Grd-Correlation-Id:
          $ref: '#/components/headers/X-Grd-Correlation-Id'
      content:
        application/vnd.guardia.v1+json:
          schema:
            $ref: '#/components/schemas/ErrorsResponse'

    Error404:
      description: Recurso não encontrado.
      headers:
        X-Grd-Trace-Id:
          $ref: '#/components/headers/X-Grd-Trace-Id'
        X-Grd-Correlation-Id:
          $ref: '#/components/headers/X-Grd-Correlation-Id'
      content:
        application/vnd.guardia.v1+json:
          schema:
            $ref: '#/components/schemas/ErrorsResponse'

    Error409:
      description: Conflito.
      headers:
        X-Grd-Trace-Id:
          $ref: '#/components/headers/X-Grd-Trace-Id'
        X-Grd-Correlation-Id:
          $ref: '#/components/headers/X-Grd-Correlation-Id'
      content:
        application/vnd.guardia.v1+json:
          schema:
            $ref: '#/components/schemas/ErrorsResponse'

    Error422:
      description: Entidade não processável.
      headers:
        X-Grd-Trace-Id:
          $ref: '#/components/headers/X-Grd-Trace-Id'
        X-Grd-Correlation-Id:
          $ref: '#/components/headers/X-Grd-Correlation-Id'
      content:
        application/vnd.guardia.v1+json:
          schema:
            $ref: '#/components/schemas/ErrorsResponse'

    Error429:
      description: Muitas requisições.
      headers:
        X-Grd-Trace-Id:
          $ref: '#/components/headers/X-Grd-Trace-Id'
        X-Grd-Correlation-Id:
          $ref: '#/components/headers/X-Grd-Correlation-Id'
        Retry-After:
          $ref: '#/components/headers/Retry-After'
      content:
        application/vnd.guardia.v1+json:
          schema:
            $ref: '#/components/schemas/ErrorsResponse'

    Error500:
      description: Erro interno do servidor.
      headers:
        X-Grd-Trace-Id:
          $ref: '#/components/headers/X-Grd-Trace-Id'
        X-Grd-Correlation-Id:
          $ref: '#/components/headers/X-Grd-Correlation-Id'
      content:
        application/vnd.guardia.v1+json:
          schema:
            $ref: '#/components/schemas/ErrorsResponse'
